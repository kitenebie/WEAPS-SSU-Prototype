<!DOCTYPE html>
<html lang="en" class="h-full">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Employment Cards</title>
    <script>
      tailwind.config = {
        darkMode: "class",
      };
    </script>
    <script src="https://cdn.tailwindcss.com"></script>
    <meta name="color-scheme" content="light dark" />
  </head>
  <body
    class="min-h-full bg-gray-100 text-gray-900 antialiased dark:bg-gray-900 dark:text-gray-100 transition-colors duration-300"
  >
    <main class="p-6">
      <!-- Header -->
      <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold">Recruiting Employees</h1>
      </div>

      <!-- Search & Filter Controls -->
      <div id="controls" class="mb-6 space-y-4">
        <input
          id="searchInput"
          type="text"
          placeholder="🔍 Search by name or email..."
          class="w-full px-4 py-2 border border-gray-300 dark:border-gray-700 rounded-xl shadow-sm focus:ring-2 focus:ring-red-400 focus:outline-none bg-white dark:bg-gray-800 dark:text-gray-100"
        />

        <!-- Filter tags -->
        <div id="filterTags" class="flex flex-wrap gap-2"></div>
      </div>

      <!-- Container for cards -->
      <div
        id="card-container"
        class="grid gap-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5"
      ></div>

      <!-- CV Page -->
      <div
        id="cv-page"
        class="hidden max-w-4xl mx-auto bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-8"
      >
        <!-- Back Button -->
        <button
          id="backBtn"
          class="mb-6 p-2 rounded-full bg-red-600 text-white hover:bg-red-700 transition flex items-center justify-center"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-5 w-5"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M15 19l-7-7 7-7"
            />
          </svg>
        </button>
        <div id="cv-content"></div>
      </div>
    </main>

    <script>
      // Employees (25 sample data)
      const employees = Array.from({ length: 25 }, (_, i) => ({
        id: `EMP-2025-${String(i + 1001).padStart(4, "0")}`,
        name: `Employee ${i + 1}`,
        position: [
          "Software Engineer",
          "UI/UX Designer",
          "Project Manager",
          "QA Tester",
          "DevOps Engineer",
        ][i % 5],
        department: [
          "IT Department",
          "Design",
          "Operations",
          "QA",
          "Infrastructure",
        ][i % 5],
        email: `employee${i + 1}@example.com`,
        phone: `+63 912 34${(i + 100).toString().slice(-3)} ${(i + 123456)
          .toString()
          .slice(-4)}`,
        location: ["Cavite", "Laguna", "Batangas", "Manila", "Quezon"][i % 5],
        status: ["Full-time", "Part-time", "Contract", "Probationary"][i % 4],
        company: ["Tech Solutions Inc.", "Creative Minds Co.", "NextGen Corp."][
          i % 3
        ],
        active: i % 3 !== 0,
        skills: [
          ["Laravel", "Livewire", "PHP"],
          ["React", "Tailwind", "JS"],
          ["Python", "Django"],
          ["AWS", "Docker"],
          ["Figma", "UI/UX"],
        ][i % 5],
        profile: `https://i.pravatar.cc/150?img=${i + 1}`,
        logo: "https://filamentphp.com/build/assets/rocket-0d392ed0.webp",

        // 🔹 New fields
        socials: {
          linkedin: `https://linkedin.com/in/employee${i + 1}`,
          github: `https://github.com/employee${i + 1}`,
          twitter: `https://twitter.com/employee${i + 1}`,
          facebook: `https://facebook.com/employee${i + 1}`,
        },
        experienceDetails: `Contributed to several high-impact ${
          [
            "software systems",
            "UI revamps",
            "project launches",
            "QA cycles",
            "cloud deployments",
          ][i % 5]
        } while collaborating cross-functionally with team members.`,
        achievements: {
          work: [
            "Employee of the Month - June 2024",
            "Led a successful project migration with 20% performance gain",
          ],
          education: [
            "Dean’s Lister for 3 years",
            "Champion of inter-university hackathon",
          ],
        },
      }));

      const container = document.getElementById("card-container");
      const searchInput = document.getElementById("searchInput");
      const filterTags = document.getElementById("filterTags");
      const cvPage = document.getElementById("cv-page");
      const cvContent = document.getElementById("cv-content");
      const backBtn = document.getElementById("backBtn");
      const controls = document.getElementById("controls");

      let activeRole = "";

      // Populate filter tags dynamically
      const uniquePositions = [
        ...new Set(employees.map((emp) => emp.position)),
      ];
      uniquePositions.unshift("All");

      uniquePositions.forEach((pos) => {
        const tag = document.createElement("button");
        tag.textContent = pos;
        tag.className =
          "px-3 py-1 text-sm rounded-full border border-gray-300 dark:border-gray-700 text-gray-600 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-red-50 dark:hover:bg-red-900 hover:text-red-600 dark:hover:text-red-300 transition";
        tag.dataset.role = pos === "All" ? "" : pos;

        tag.addEventListener("click", () => {
          activeRole = tag.dataset.role;

          // reset all tags
          [...filterTags.children].forEach((btn) =>
            btn.classList.remove(
              "bg-red-800",
              "text-white",
              "border-red-800",
              "dark:bg-red-800",
              "dark:border-red-800"
            )
          );

          // highlight active tag
          tag.classList.add(
            "bg-red-600",
            "text-white",
            "border-red-600",
            "dark:bg-red-600",
            "dark:border-red-600"
          );

          filterEmployees();
        });

        if (pos === "All") {
          tag.classList.add(
            "bg-red-600",
            "text-white",
            "border-red-600",
            "dark:bg-red-600",
            "dark:border-red-600"
          );
        }

        filterTags.appendChild(tag);
      });

      // Render employee cards
      function renderCards(data) {
        container.innerHTML = "";
        if (data.length === 0) {
          container.innerHTML = `<p class="col-span-full text-center text-gray-500 dark:text-gray-400">No employees found.</p>`;
          return;
        }
        data.forEach((emp) => {
          const card = document.createElement("div");
          card.className =
            "cursor-pointer bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 transition transform hover:-translate-y-1 hover:shadow-2xl";
          card.innerHTML = `
          <div class="flex items-center justify-between mb-4">
            <div class="flex items-center gap-2">
              <img src="${
                emp.logo
              }" alt="Company Logo" class="w-7 h-7 rounded-md object-cover">
              <span class="text-sm font-medium text-gray-500 dark:text-gray-400">${
                emp.company
              }</span>
            </div>
            <span class="inline-flex items-center gap-1 text-xs px-2 py-1 rounded-full ${
              emp.active
                ? "bg-green-50 text-green-700 ring-1 ring-green-200 dark:bg-green-900/40 dark:text-green-300 dark:ring-green-700"
                : "bg-red-50 text-red-700 ring-1 ring-red-200 dark:bg-red-900/40 dark:text-red-300 dark:ring-red-700"
            }">
              <span class="w-1.5 h-1.5 rounded-full ${
                emp.active ? "bg-green-500" : "bg-red-500"
              }"></span>
              ${emp.active ? "Active" : "Inactive"}
            </span>
          </div>
          <div class="flex items-center gap-4 mb-4">
            <img src="${
              emp.profile
            }" alt="Profile Picture" class="w-20 h-20 rounded-full object-cover ring-4 ring-green-500/20">
            <div>
              <h1 class="text-lg font-semibold text-gray-800 dark:text-gray-100 leading-tight">${
                emp.name
              }</h1>
              <p class="text-gray-500 dark:text-gray-400 text-sm">${
                emp.position
              } • ${emp.department}</p>
              <p class="text-gray-400 dark:text-gray-500 text-xs mt-0.5">Employee ID: ${
                emp.id
              }</p>
            </div>
          </div>
                    <!-- Body -->
          <div class="space-y-3 text-sm">
            <div class="grid grid-cols-3 gap-2">
              <span class="col-span-1 text-gray-500 dark:text-gray-400">Email</span>
              <span class="col-span-2 font-medium text-gray-800 dark:text-gray-100 truncate">${
                emp.email
              }</span>
            </div>
            <div class="grid grid-cols-3 gap-2">
              <span class="col-span-1 text-gray-500 dark:text-gray-400">Phone</span>
              <span class="col-span-2 font-medium text-gray-800 dark:text-gray-100">${
                emp.phone
              }</span>
            </div>
            <div class="grid grid-cols-3 gap-2">
              <span class="col-span-1 text-gray-500 dark:text-gray-400">Location</span>
              <span class="col-span-2 font-medium text-gray-800 dark:text-gray-100">${
                emp.location
              }</span>
            </div>
            <div class="grid grid-cols-3 gap-2">
              <span class="col-span-1 text-gray-500 dark:text-gray-400">Status</span>
              <span class="col-span-2">
                <span class="inline-flex items-center gap-1 text-xs px-2 py-1 rounded-full bg-red-50 text-red-700 ring-1 ring-red-200 dark:bg-red-900/40 dark:text-red-300 dark:ring-red-700">
                  ${emp.status}
                </span>
              </span>
            </div>
            <div class="pt-1">
              <p class="text-xs text-gray-500 dark:text-gray-400">Skills</p>
              <div class="mt-2 flex flex-wrap gap-2">
                ${emp.skills
                  .map(
                    (skill) =>
                      `<span class="px-2.5 py-1 text-xs rounded-full bg-gray-100 text-gray-700 dark:bg-gray-700 dark:text-gray-200">${skill}</span>`
                  )
                  .join("")}
              </div>
            </div>
          </div>
        `;
          card.addEventListener("click", () => showCV(emp));
          container.appendChild(card);
        });
      }

      // Show CV Page
function showCV(emp) {
  container.classList.add("hidden");
  controls.classList.add("hidden");
  cvPage.classList.remove("hidden");

  cvContent.innerHTML = `
    <div class="flex items-center gap-6 mb-6">
      <img src="${emp.profile}" class="w-28 h-28 rounded-full ring-4 ring-red-500/30 object-cover">
      <div>
        <h2 class="text-2xl font-bold">${emp.name}</h2>
        <p class="text-gray-500 dark:text-gray-400">${emp.position} • ${emp.department}</p>
        <p class="text-sm text-gray-400 dark:text-gray-500">Employee ID: ${emp.id}</p>
      </div>
    </div>

    <div class="space-y-6">
      <!-- Contact -->
      <div>
        <h3 class="flex items-center gap-2 font-semibold text-lg mb-2">
          📞 Contact Information
        </h3>
        <p><strong>Email:</strong> <a href="mailto:${emp.email}" class="text-red-600 hover:underline">${emp.email}</a></p>
        <p><strong>Phone:</strong> <a href="tel:${emp.phone}" class="text-red-600 hover:underline">${emp.phone}</a></p>
        <p><strong>Location:</strong> ${emp.location}</p>
      </div>

      <!-- Social Media -->
      <div>
        <h3 class="flex items-center gap-2 font-semibold text-lg mb-2">
          🌐 Social Media
        </h3>
        <div class="flex gap-4">
          <a href="${emp.socials.linkedin}" target="_blank" class="flex items-center gap-2 text-blue-700 hover:underline">
            <img src="https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/linkedin.svg" class="w-5 h-5" alt="LinkedIn"/> LinkedIn
          </a>
          <a href="${emp.socials.github}" target="_blank" class="flex items-center gap-2 text-gray-800 hover:underline">
            <img src="https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/github.svg" class="w-5 h-5" alt="GitHub"/> GitHub
          </a>
          <a href="${emp.socials.twitter}" target="_blank" class="flex items-center gap-2 text-sky-500 hover:underline">
            <img src="https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/twitter.svg" class="w-5 h-5" alt="Twitter"/> Twitter
          </a>
          <a href="${emp.socials.facebook}" target="_blank" class="flex items-center gap-2 text-blue-600 hover:underline">
            <img src="https://cdn.jsdelivr.net/gh/simple-icons/simple-icons/icons/facebook.svg" class="w-5 h-5" alt="Facebook"/> Facebook
          </a>
        </div>
      </div>

      <!-- Employment Status -->
      <div>
        <h3 class="flex items-center gap-2 font-semibold text-lg mb-2">
          💼 Employment Status
        </h3>
        <p>${emp.status} | ${emp.active ? "Active" : "Inactive"}</p>
      </div>

      <!-- Skills -->
      <div>
        <h3 class="flex items-center gap-2 font-semibold text-lg mb-2">
          🛠️ Skills
        </h3>
        <div class="flex flex-wrap gap-2">
          ${emp.skills.map(skill => `<span class="px-3 py-1 text-sm rounded-full bg-gray-100 dark:bg-gray-700 dark:text-gray-200">${skill}</span>`).join("")}
        </div>
      </div>

      <!-- Experience -->
      <div>
        <h3 class="flex items-center gap-2 font-semibold text-lg mb-2">
          📂 Work Experience
        </h3>
        <p class="text-gray-700 dark:text-gray-300">${emp.experienceDetails}</p>
        <ul class="list-disc ml-6 text-gray-700 dark:text-gray-300 mt-2">
          <li>Worked on multiple ${emp.position} projects at ${emp.company}</li>
          <li>Collaborated with ${emp.department} team</li>
          <li>Specialized in ${emp.skills.join(", ")}</li>
        </ul>
      </div>

      <!-- Achievements -->
      <div>
        <h3 class="flex items-center gap-2 font-semibold text-lg mb-2">
          🏆 Achievements
        </h3>
        <h4 class="font-medium">Professional:</h4>
        <ul class="list-disc ml-6 mb-3 text-gray-700 dark:text-gray-300">
          ${emp.achievements.work.map(item => `<li>${item}</li>`).join("")}
        </ul>
        <h4 class="font-medium">Academic:</h4>
        <ul class="list-disc ml-6 text-gray-700 dark:text-gray-300">
          ${emp.achievements.education.map(item => `<li>${item}</li>`).join("")}
        </ul>
      </div>
    </div>
  `;
}


      // Back button
      backBtn.addEventListener("click", () => {
        cvPage.classList.add("hidden");
        container.classList.remove("hidden");
        controls.classList.remove("hidden");
      });

      // Filter function
      function filterEmployees() {
        const search = searchInput.value.toLowerCase();
        const filtered = employees.filter((emp) => {
          const matchesSearch =
            emp.name.toLowerCase().includes(search) ||
            emp.email.toLowerCase().includes(search);
          const matchesRole = activeRole ? emp.position === activeRole : true;
          return matchesSearch && matchesRole;
        });
        renderCards(filtered);
      }

      searchInput.addEventListener("input", filterEmployees);

      // Initial render
      renderCards(employees);
    </script>
  </body>
</html>
